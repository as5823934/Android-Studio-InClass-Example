/**
 * 
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.gatebuzz.oxfordapi.model;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;


/**
 * ExamplesListInner
 */
public class ExamplesListInner   {
  @SerializedName("definitions")
  private String[] definitions = null;

  @SerializedName("domains")
  private String[] domains = null;

  @SerializedName("notes")
  private CategorizedTextList notes = null;

  @SerializedName("regions")
  private String[] regions = null;

  @SerializedName("registers")
  private String[] registers = null;

  @SerializedName("senseIds")
  private String[] senseIds = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("translations")
  private TranslationsList translations = null;

  public ExamplesListInner definitions(String[] definitions) {
    this.definitions = definitions;
    return this;
  }

   /**
   * A list of statements of the exact meaning of a word
   * @return definitions
  **/
  public String[] getDefinitions() {
    return definitions;
  }

  public void setDefinitions(String[] definitions) {
    this.definitions = definitions;
  }

  public ExamplesListInner domains(String[] domains) {
    this.domains = domains;
    return this;
  }

   /**
   * A subject, discipline, or branch of knowledge particular to the Sense
   * @return domains
  **/
  public String[] getDomains() {
    return domains;
  }

  public void setDomains(String[] domains) {
    this.domains = domains;
  }

  public ExamplesListInner notes(CategorizedTextList notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  public CategorizedTextList getNotes() {
    return notes;
  }

  public void setNotes(CategorizedTextList notes) {
    this.notes = notes;
  }

  public ExamplesListInner regions(String[] regions) {
    this.regions = regions;
    return this;
  }

   /**
   * A particular area in which the pronunciation occurs, e.g. 'Great Britain'
   * @return regions
  **/
  public String[] getRegions() {
    return regions;
  }

  public void setRegions(String[] regions) {
    this.regions = regions;
  }

  public ExamplesListInner registers(String[] registers) {
    this.registers = registers;
    return this;
  }

   /**
   * A level of language usage, typically with respect to formality. e.g. 'offensive', 'informal'
   * @return registers
  **/
  public String[] getRegisters() {
    return registers;
  }

  public void setRegisters(String[] registers) {
    this.registers = registers;
  }

  public ExamplesListInner senseIds(String[] senseIds) {
    this.senseIds = senseIds;
    return this;
  }

   /**
   * The list of sense identifiers related to the example. Provided in the sentences endpoint only.
   * @return senseIds
  **/
  public String[] getSenseIds() {
    return senseIds;
  }

  public void setSenseIds(String[] senseIds) {
    this.senseIds = senseIds;
  }

  public ExamplesListInner text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public ExamplesListInner translations(TranslationsList translations) {
    this.translations = translations;
    return this;
  }

   /**
   * Get translations
   * @return translations
  **/
  public TranslationsList getTranslations() {
    return translations;
  }

  public void setTranslations(TranslationsList translations) {
    this.translations = translations;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExamplesListInner examplesListInner = (ExamplesListInner) o;
    return Objects.equals(this.definitions, examplesListInner.definitions) &&
        Objects.equals(this.domains, examplesListInner.domains) &&
        Objects.equals(this.notes, examplesListInner.notes) &&
        Objects.equals(this.regions, examplesListInner.regions) &&
        Objects.equals(this.registers, examplesListInner.registers) &&
        Objects.equals(this.senseIds, examplesListInner.senseIds) &&
        Objects.equals(this.text, examplesListInner.text) &&
        Objects.equals(this.translations, examplesListInner.translations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(definitions, domains, notes, regions, registers, senseIds, text, translations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExamplesListInner {\n");
    
    sb.append("    definitions: ").append(toIndentedString(definitions)).append("\n");
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    registers: ").append(toIndentedString(registers)).append("\n");
    sb.append("    senseIds: ").append(toIndentedString(senseIds)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    translations: ").append(toIndentedString(translations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

